apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: seating
  labels:
    app.kubernetes.io/managed-by: operator
spec:
  kafka:
    template:
      statefulset:
        metadata:
          labels:
            app.kubernetes.io/part-of: kafka
            app.kubernetes.io/component: kafka
    replicas: 3
    listeners:
      plain: {}
      tls: {}
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 2Gi
    storage:
      type: persistent-claim
      size: 5Gi
      deleteClaim: true
    metrics:
      lowercaseOutputName: true
      rules:
        - pattern: "kafka.server<type=(.+), name=(.+)PerSec\\w*><>Count"
          name: "kafka_server_$1_$2_total"
        - pattern: "kafka.server<type=(.+), name=(.+)PerSec\\w*, topic=(.+)><>Count"
          name: "kafka_server_$1_$2_total"
          labels:
            topic: "$3"
  zookeeper:
    template:
      statefulset:
        metadata:
          labels:
            app.kubernetes.io/part-of: kafka
            app.kubernetes.io/component: zookeeper
    replicas: 3
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    storage:
      type: persistent-claim
      size: 1Gi
      deleteClaim: false
    metrics:
      lowercaseOutputName: true
  entityOperator:
    topicOperator: {}
    userOperator: {}