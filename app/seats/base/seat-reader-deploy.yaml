apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/gnunn1/seating
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"seat-reader:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"seat-reader\")].image"}]'
    app.openshift.io/connects-to: database
  labels:
    app: seats
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: seat-reader
    app.kubernetes.io/name: seat-reader
    app.kubernetes.io/part-of: seats
    app.openshift.io/runtime: camel
  name: seat-reader
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: seat-reader
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: seat-reader
        deploymentconfig: seat-reader
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/seating/seat-reader
        imagePullPolicy: Always
        name: seat-reader
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30