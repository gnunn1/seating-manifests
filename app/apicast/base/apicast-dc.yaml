apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: 3scale-gateway
    app.kubernetes.io/component: 3scale-gateway
    app.kubernetes.io/instance: 3scale-gateway
    app.openshift.io/runtime: 3scale
    app.kubernetes.io/part-of: 3scale
  name: apicast
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: apicast
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        prometheus.io/port: "9421"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        deploymentconfig: apicast
    spec:
      containers:
      - env:
        - name: THREESCALE_PORTAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: password
              name: apicast-configuration-url-secret
        - name: THREESCALE_CONFIG_FILE
        # - name: THREESCALE_DEPLOYMENT_ENV
        #   value: production
        - name: RESOLVER
        - name: APICAST_SERVICES_LIST
        - name: APICAST_CONFIGURATION_LOADER
          value: boot
        - name: APICAST_LOG_LEVEL
        - name: APICAST_PATH_ROUTING
          value: "false"
        - name: APICAST_RESPONSE_CODES
          value: "false"
        - name: APICAST_CONFIGURATION_CACHE
        - name: REDIS_URL
        - name: APICAST_MANAGEMENT_API
          value: status
        - name: OPENSSL_VERIFY
          value: "false"
        image: registry.redhat.io/3scale-amp2/apicast-gateway-rhel8:3scale2.8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/live
            port: management
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: apicast
        ports:
        - containerPort: 8080
          name: proxy
          protocol: TCP
        - containerPort: 8090
          name: management
          protocol: TCP
        - containerPort: 9421
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: management
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange